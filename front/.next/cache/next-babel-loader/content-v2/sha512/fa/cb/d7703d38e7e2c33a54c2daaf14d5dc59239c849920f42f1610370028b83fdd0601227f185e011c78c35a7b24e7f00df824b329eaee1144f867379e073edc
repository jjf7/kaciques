{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\kaciques\\\\front\\\\components\\\\Toggle.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { setTheme } from \"../utils/themes\";\nexport default function Toggle() {\n  _s();\n\n  var _useState = useState(true),\n      checked = _useState[0],\n      setChecked = _useState[1];\n\n  var handleOnClick = function handleOnClick() {\n    if (localStorage.getItem(\"theme\") === \"theme-dark\") {\n      setTheme(\"theme-light\");\n      setChecked(false);\n    } else {\n      setTheme(\"theme-dark\");\n      setChecked(true);\n    }\n  };\n\n  useEffect(function () {\n    if (localStorage.getItem(\"theme\")) {\n      if (localStorage.getItem(\"theme\") === \"theme-dark\") {\n        setChecked(true);\n      } else {\n        setChecked(false);\n      }\n    } else {\n      setChecked(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    onClick: handleOnClick,\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fi-rr-opacity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Toggle, \"ryLblSnFPTMsypwQXaCNHYLb78s=\");\n\n_c = Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["C:/Users/Owner/Desktop/kaciques/front/components/Toggle.js"],"names":["useEffect","useState","setTheme","Toggle","checked","setChecked","handleOnClick","localStorage","getItem"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,kBACDF,QAAQ,CAAC,IAAD,CADP;AAAA,MACxBG,OADwB;AAAA,MACfC,UADe;;AAE/B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,YAAtC,EAAoD;AAClDN,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,MAGO;AACLH,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GARD;;AASAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC/B,UAAID,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,YAAtC,EAAoD;AAClDH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAFD,MAEO;AACLA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAND,MAMK;AACHA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACE;AAAG,IAAA,OAAO,EAAEC,aAAZ;AAAA,2BAA2B;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAzBuBH,M;;KAAAA,M","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { setTheme } from \"../utils/themes\";\r\n\r\nexport default function Toggle() {\r\n  const [checked, setChecked] = useState(true);\r\n  const handleOnClick = () => {\r\n    if (localStorage.getItem(\"theme\") === \"theme-dark\") {\r\n      setTheme(\"theme-light\");\r\n      setChecked(false);\r\n    } else {\r\n      setTheme(\"theme-dark\");\r\n      setChecked(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"theme\")){\r\n      if (localStorage.getItem(\"theme\") === \"theme-dark\") {\r\n        setChecked(true);\r\n      } else {\r\n        setChecked(false);\r\n      }\r\n    }else{\r\n      setChecked(true);\r\n    }\r\n  }, []);\r\n  return ( \r\n    <a onClick={handleOnClick}><i className=\"fi-rr-opacity\"></i></a>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}