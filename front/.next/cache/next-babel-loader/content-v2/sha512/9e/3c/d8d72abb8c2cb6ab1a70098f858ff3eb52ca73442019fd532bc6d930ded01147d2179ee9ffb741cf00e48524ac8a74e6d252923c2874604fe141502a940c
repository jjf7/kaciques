{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Owner/Desktop/kaciques/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/Owner/Desktop/kaciques/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/Owner/Desktop/kaciques/front/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"C:/Users/Owner/Desktop/kaciques/front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\kaciques\\\\front\\\\components\\\\Table.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 1rem;\\n  table {\\n    border-spacing: 0;\\n    border: 1px solid black;\\n    tr {\\n      :last-child {\\n        td {\\n          border-bottom: 0;\\n        }\\n      }\\n    }\\n    th,\\n    td {\\n      margin: 0;\\n      padding: 0.5rem;\\n      border-bottom: 1px solid black;\\n      border-right: 1px solid black;\\n      :last-child {\\n        border-right: 0;\\n      }\\n    }\\n  }\\n  .pagination {\\n    padding: 0.5rem;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { useTable, usePagination, useRowSelect } from \"react-table\";\nvar Styles = styled.div(_templateObject());\nvar IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var indeterminate = _ref.indeterminate,\n      rest = _objectWithoutProperties(_ref, [\"indeterminate\"]);\n\n  var defaultRef = React.useRef();\n  var resolvedRef = ref || defaultRef;\n  React.useEffect(function () {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      type: \"checkbox\",\n      ref: resolvedRef\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n_c2 = IndeterminateCheckbox;\nexport default function Table(_ref2) {\n  _s2();\n\n  var _this2 = this;\n\n  var columns = _ref2.columns,\n      data = _ref2.data;\n\n  // Use the state and functions returned from useTable to build your UI\n  var _useTable = useTable({\n    columns: columns,\n    data: data\n  }, usePagination, useRowSelect, function (hooks) {\n    hooks.visibleColumns.push(function (columns) {\n      return [// Let's make a column for selection\n      {\n        id: 'selection',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: function Header(_ref3) {\n          var getToggleAllPageRowsSelectedProps = _ref3.getToggleAllPageRowsSelectedProps;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, getToggleAllPageRowsSelectedProps()), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, _this2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, _this2);\n        },\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: function Cell(_ref4) {\n          var row = _ref4.row;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, row.getToggleRowSelectedProps()), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, _this2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this2);\n        }\n      }].concat(_toConsumableArray(columns));\n    });\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      selectedFlatRows = _useTable.selectedFlatRows,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize,\n      selectedRowIds = _useTable$state.selectedRowIds; // Render the UI for your table\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: JSON.stringify({\n          pageIndex: pageIndex,\n          pageSize: pageSize,\n          pageCount: pageCount,\n          canNextPage: canNextPage,\n          canPreviousPage: canPreviousPage\n        }, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({\n      className: \"table\"\n    }, getTableProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                children: column.render('Header')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, _this2);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map(function (row, i) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.render('Cell')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 26\n              }, _this2);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, _this2);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return gotoPage(0);\n        },\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return previousPage();\n        },\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return nextPage();\n        },\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return gotoPage(pageCount - 1);\n        },\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: function onChange(e) {\n            var page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: function onChange(e) {\n          setPageSize(Number(e.target.value));\n        },\n        children: [10, 20, 30, 40, 50].map(function (pageSize) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: JSON.stringify({\n            selectedRowIds: selectedRowIds,\n            'selectedFlatRows[].original': selectedFlatRows.map(function (d) {\n              return d.original;\n            })\n          }, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Table, \"RYQx6tzjnARqyVPoMVHa5tHJqAM=\", false, function () {\n  return [useTable];\n});\n\n_c3 = Table;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndeterminateCheckbox$React.forwardRef\");\n$RefreshReg$(_c2, \"IndeterminateCheckbox\");\n$RefreshReg$(_c3, \"Table\");","map":{"version":3,"sources":["C:/Users/Owner/Desktop/kaciques/front/components/Table.js"],"names":["React","styled","useTable","usePagination","useRowSelect","Styles","div","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","Table","columns","data","hooks","visibleColumns","push","id","Header","getToggleAllPageRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","selectedFlatRows","state","pageIndex","pageSize","selectedRowIds","JSON","stringify","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","width","d","original"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components'\r\nimport { useTable, usePagination, useRowSelect } from \"react-table\";\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n  .pagination {\r\n    padding: 0.5rem;\r\n  }\r\n`\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\nexport default function Table({ columns, data }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    selectedFlatRows,\r\n    state: { pageIndex, pageSize, selectedRowIds },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    usePagination,\r\n    useRowSelect,\r\n    hooks => {\r\n      hooks.visibleColumns.push(columns => [\r\n        // Let's make a column for selection\r\n        {\r\n          id: 'selection',\r\n          // The header can use the table's getToggleAllRowsSelectedProps method\r\n          // to render a checkbox\r\n          Header: ({ getToggleAllPageRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\r\n            </div>\r\n          ),\r\n          // The cell can use the individual row's getToggleRowSelectedProps method\r\n          // to the render a checkbox\r\n          Cell: ({ row }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n            </div>\r\n          ),\r\n        },\r\n        ...columns,\r\n      ])\r\n    }\r\n  )\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <pre>\r\n        <code>\r\n          {JSON.stringify(\r\n            {\r\n              pageIndex,\r\n              pageSize,\r\n              pageCount,\r\n              canNextPage,\r\n              canPreviousPage,\r\n            },\r\n            null,\r\n            2\r\n          )}\r\n        </code>\r\n      </pre>\r\n      <table className=\"table\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {/* \r\n        Pagination can be built however you'd like. \r\n        This is just a very basic UI implementation:\r\n      */}\r\n      <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <pre>\r\n          <code>\r\n            {JSON.stringify(\r\n              {\r\n                selectedRowIds: selectedRowIds,\r\n                'selectedFlatRows[].original': selectedFlatRows.map(\r\n                  d => d.original\r\n                ),\r\n              },\r\n              null,\r\n              2\r\n            )}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}