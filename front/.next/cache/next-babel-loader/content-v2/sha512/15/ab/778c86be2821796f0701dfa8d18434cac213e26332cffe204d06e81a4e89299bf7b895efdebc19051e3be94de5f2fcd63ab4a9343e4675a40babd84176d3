{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\kaciques\\\\front\\\\components\\\\Table.js\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport DataTable from \"react-data-table-component\";\nimport Button from \"react-bootstrap/Button\";\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst ClearButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n        columns={columns}\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({\n  filterText,\n  onFilter,\n  onClear\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(TextField, {\n    id: \"search\",\n    type: \"text\",\n    placeholder: \"Introduzca el nombre del producto a buscar\",\n    \"aria-label\": \"Search Input\",\n    value: filterText,\n    onChange: onFilter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n    type: \"button\",\n    onClick: onClear,\n    children: \"X\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\nconst Table = ({\n  columns,\n  data,\n  setMsg\n}) => {\n  const [filterText, setFilterText] = React.useState('');\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n  const filteredItems = data.filter(item => item.title && item.title.toLowerCase().includes(filterText.toLowerCase()));\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText('');\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(FilterComponent, {\n      onFilter: e => setFilterText(e.target.value),\n      onClear: handleClear,\n      filterText: filterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }, [filterText, resetPaginationToggle]);\n\n  const edit = record => {\n    console.log(record);\n  };\n\n  const del = async record => {\n    console.log(record.id);\n    const result = await fetch(`http://localhost:3001/products/${record.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(result);\n    const response = await result.json();\n    console.log(response);\n\n    if (response == 'success') {\n      setMsg({\n        status: 1,\n        msg: \"Se ha eliminado el producto correctamente\"\n      });\n    } else {\n      setMsg({\n        status: 1,\n        msg: \"Ha ocurrido un error\"\n      });\n    }\n  };\n\n  const mergedColumns = columns.map(col => {\n    return col;\n  });\n  const createColumns = useCallback(() => {\n    return [...mergedColumns, {\n      name: 'Acciones',\n      allowOverflow: true,\n      right: true,\n      minWidth: '200px',\n      cell: row => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning btn-sm\",\n            type: \"button\",\n            onClick: () => edit(row),\n            style: {\n              backgroundColor: 'aliceblue'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fi-rr-edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 137\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm ml-2 text-danger\",\n            type: \"button\",\n            onClick: () => del(row),\n            style: {\n              backgroundColor: 'aliceblue'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fi-rr-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 150\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this);\n      }\n    }];\n  }, [mergedColumns]);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    columns: createColumns(),\n    data: filteredItems,\n    defaultSortField: \"title\",\n    pagination: true,\n    paginationPerPage: 5,\n    paginationResetDefaultPage: resetPaginationToggle // optionally, a hook to reset pagination to page 1\n    ,\n    subHeader: true,\n    subHeaderComponent: subHeaderComponentMemo,\n    persistTableHead: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/kaciques/front/components/Table.js"],"names":["React","useCallback","useRef","useState","styled","DataTable","Button","TextField","input","ClearButton","FilterComponent","filterText","onFilter","onClear","Table","columns","data","setMsg","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","filter","item","title","toLowerCase","includes","subHeaderComponentMemo","useMemo","handleClear","e","target","value","edit","record","console","log","del","id","result","fetch","method","headers","response","json","status","msg","mergedColumns","map","col","createColumns","name","allowOverflow","right","minWidth","cell","row","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport DataTable from \"react-data-table-component\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst TextField = styled.input`\r\n  height: 32px;\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border: 1px solid #e5e5e5;\r\n  padding: 0 32px 0 16px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ClearButton = styled(Button)`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n        columns={columns}\r\n  height: 34px;\r\n  width: 32px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\r\n  <>\r\n    <TextField id=\"search\" type=\"text\" placeholder=\"Introduzca el nombre del producto a buscar\" aria-label=\"Search Input\" value={filterText} onChange={onFilter} />\r\n    <ClearButton type=\"button\" onClick={onClear}>X</ClearButton>\r\n  </>\r\n);\r\n\r\nconst Table = ({columns, data, setMsg}) => {\r\n\r\n  const [filterText, setFilterText] = React.useState('');\r\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n  const filteredItems = data.filter(item => item.title && item.title.toLowerCase().includes(filterText.toLowerCase()));\r\n\r\n  const subHeaderComponentMemo = React.useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText('');\r\n      }\r\n    };\r\n\r\n    return <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />;\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n\r\n  const edit = record => {\r\n    console.log(record)\r\n  };\r\n\r\n\r\n  const del = async (record) => {\r\n    console.log(record.id)\r\n\r\n    const result = await fetch(`http://localhost:3001/products/${record.id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type':'application/json'\r\n      }\r\n    })\r\n\r\n    console.log(result)\r\n\r\n    const response = await result.json()\r\n\r\n    console.log(response)\r\n\r\n    if(response == 'success'){\r\n      setMsg({ status: 1, msg: \"Se ha eliminado el producto correctamente\" });\r\n    }else{\r\n      setMsg({ status: 1, msg: \"Ha ocurrido un error\" });\r\n    }\r\n\r\n  }\r\n\r\n \r\n  const mergedColumns = columns.map(col => {\r\n      return col;\r\n  });\r\n\r\n  const createColumns = useCallback(() => {\r\n    return [\r\n      ...mergedColumns,\r\n      {\r\n        name: 'Acciones',\r\n        allowOverflow: true,\r\n        right: true,\r\n        minWidth: '200px',\r\n        cell: row => {\r\n          return (\r\n          <div>\r\n            <button className=\"btn btn-warning btn-sm\" type=\"button\" onClick={() => edit(row)} style={{ backgroundColor: 'aliceblue' }}><i className=\"fi-rr-edit\"></i></button>\r\n          <button className=\"btn btn-danger btn-sm ml-2 text-danger\" type=\"button\" onClick={() => del(row)} style={{ backgroundColor: 'aliceblue' }}><i className=\"fi-rr-trash\"></i></button>\r\n          </div>\r\n          \r\n          )\r\n          \r\n          ;\r\n        },\r\n      },\r\n    ];\r\n  }, [mergedColumns]);\r\n\r\n  return (\r\n    <DataTable\r\n     \r\n      columns={createColumns()}\r\n      data={filteredItems}\r\n      defaultSortField=\"title\"\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n      subHeader\r\n      subHeaderComponent={subHeaderComponentMemo}\r\n      persistTableHead\r\n    />\r\n  );\r\n};\r\n\r\nexport default Table"]},"metadata":{},"sourceType":"module"}