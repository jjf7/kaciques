{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\kaciques\\\\front\\\\components\\\\Table2.js\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport DataTable from \"react-data-table-component\";\nimport Button from \"react-bootstrap/Button\";\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst ClearButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n        columns={columns}\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Table2 = ({\n  columns,\n  data\n}) => {\n  const [filterText, setFilterText] = React.useState(\"\");\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n  const filteredItems = data.filter(item => item.title && item.title.toLowerCase().includes(filterText.toLowerCase()));\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(FilterComponent, {\n      onFilter: e => setFilterText(e.target.value),\n      onClear: handleClear,\n      filterText: filterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }, [filterText, resetPaginationToggle]);\n\n  const edit = record => {\n    console.log(record);\n  };\n\n  const mergedColumns = columns.map(col => {\n    return col;\n  });\n  const createColumns = useCallback(() => {\n    return [...mergedColumns, {\n      name: \"Actions\",\n      allowOverflow: true,\n      minWidth: \"200px\",\n      cell: row => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => edit(row),\n          style: {\n            backgroundColor: \"aliceblue\"\n          },\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      }\n    }];\n  }, [mergedColumns]);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    title: \"Listado de Productos\",\n    columns: createColumns(),\n    data: filteredItems,\n    defaultSortField: \"title\",\n    pagination: true,\n    paginationPerPage: 5,\n    paginationResetDefaultPage: resetPaginationToggle // optionally, a hook to reset pagination to page 1\n    ,\n    subHeader: true,\n    subHeaderComponent: subHeaderComponentMemo,\n    selectableRows: true,\n    persistTableHead: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Table2;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/kaciques/front/components/Table2.js"],"names":["React","useCallback","useRef","useState","styled","DataTable","Button","TextField","input","ClearButton","Table2","columns","data","filterText","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","filter","item","title","toLowerCase","includes","subHeaderComponentMemo","useMemo","handleClear","e","target","value","edit","record","console","log","mergedColumns","map","col","createColumns","name","allowOverflow","minWidth","cell","row","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst TextField = styled.input`\r\n  height: 32px;\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border: 1px solid #e5e5e5;\r\n  padding: 0 32px 0 16px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ClearButton = styled(Button)`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n        columns={columns}\r\n  height: 34px;\r\n  width: 32px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Table2 = ({ columns, data }) => {\r\n  const [filterText, setFilterText] = React.useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(\r\n    false\r\n  );\r\n  const filteredItems = data.filter(\r\n    (item) =>\r\n      item.title && item.title.toLowerCase().includes(filterText.toLowerCase())\r\n  );\r\n\r\n  const subHeaderComponentMemo = React.useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <FilterComponent\r\n        onFilter={(e) => setFilterText(e.target.value)}\r\n        onClear={handleClear}\r\n        filterText={filterText}\r\n      />\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  const edit = (record) => {\r\n    console.log(record);\r\n  };\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    return col;\r\n  });\r\n\r\n  const createColumns = useCallback(() => {\r\n    return [\r\n      ...mergedColumns,\r\n      {\r\n        name: \"Actions\",\r\n        allowOverflow: true,\r\n        minWidth: \"200px\",\r\n        cell: (row) => {\r\n          return (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => edit(row)}\r\n              style={{ backgroundColor: \"aliceblue\" }}\r\n            >\r\n              edit\r\n            </button>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  }, [mergedColumns]);\r\n\r\n  return (\r\n    <DataTable\r\n      title=\"Listado de Productos\"\r\n      columns={createColumns()}\r\n      data={filteredItems}\r\n      defaultSortField=\"title\"\r\n      pagination\r\n      paginationPerPage={5}\r\n      paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n      subHeader\r\n      subHeaderComponent={subHeaderComponentMemo}\r\n      selectableRows\r\n      persistTableHead\r\n    />\r\n  );\r\n};\r\n\r\nexport default Table2;\r\n"]},"metadata":{},"sourceType":"module"}