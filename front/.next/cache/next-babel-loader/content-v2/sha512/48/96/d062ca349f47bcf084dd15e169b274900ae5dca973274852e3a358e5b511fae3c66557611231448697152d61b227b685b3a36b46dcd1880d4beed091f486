{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\kaciques\\\\front\\\\components\\\\Table.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { useTable, usePagination, useRowSelect } from \"react-table\";\nconst IndeterminateCheckbox = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    indeterminate\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"indeterminate\"]);\n\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      type: \"checkbox\",\n      ref: resolvedRef\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n});\nexport default function Table({\n  columns,\n  data,\n  setShow,\n  setProductM\n}) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    selectedFlatRows,\n    state: {\n      pageIndex,\n      pageSize,\n      selectedRowIds\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 5\n    }\n  }, usePagination, useRowSelect, hooks => {\n    hooks.visibleColumns.push(columns => [// Let's make a column for selection\n    {\n      id: \"selection\",\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: ({\n        getToggleAllPageRowsSelectedProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 62\n      }, this),\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, row.getToggleRowSelectedProps()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, ...columns]);\n  });\n\n  if (selectedFlatRows.length > 0) {\n    setShow(true);\n    console.log(selectedFlatRows[0].original);\n    setProductM({\n      title: selectedFlatRows[0].original.title,\n      price: selectedFlatRows[0].original.price,\n      codebar: selectedFlatRows[0].original.codebar,\n      category: selectedFlatRows[0].original.category\n    });\n  } else {\n    setShow(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({\n      className: \"table mt-5\"\n    }, getTableProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({\n            className: \"find\"\n          }, column.getHeaderProps()), {}, {\n            children: column.render(\"Header\")\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this))\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({\n                className: \"find\"\n              }, cell.getCellProps()), {}, {\n                children: cell.render(\"Cell\")\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary ml-2\",\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary  ml-2\",\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary  ml-2 \",\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-3\",\n        children: [\"Page\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-3\",\n        children: [\"| Go to page:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"ml-3\",\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: [5, 10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/Owner/Desktop/kaciques/front/components/Table.js"],"names":["React","useState","Modal","Button","useTable","usePagination","useRowSelect","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","Table","columns","data","setShow","setProductM","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","selectedFlatRows","state","pageIndex","pageSize","selectedRowIds","initialState","hooks","visibleColumns","push","id","Header","getToggleAllPageRowsSelectedProps","Cell","row","getToggleRowSelectedProps","length","console","log","original","title","price","codebar","category","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","e","target","value","Number","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useTable, usePagination, useRowSelect } from \"react-table\";\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef();\r\n    const resolvedRef = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default function Table({ columns, data, setShow, setProductM }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    selectedFlatRows,\r\n    state: { pageIndex, pageSize, selectedRowIds },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 5 },\r\n    },\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => [\r\n        // Let's make a column for selection\r\n        {\r\n          id: \"selection\",\r\n          // The header can use the table's getToggleAllRowsSelectedProps method\r\n          // to render a checkbox\r\n          Header: ({ getToggleAllPageRowsSelectedProps }) => <div>Editar</div>,\r\n          // The cell can use the individual row's getToggleRowSelectedProps method\r\n          // to the render a checkbox\r\n          Cell: ({ row }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n            </div>\r\n          ),\r\n        },\r\n        ...columns,\r\n      ]);\r\n    }\r\n  );\r\n\r\n  if (selectedFlatRows.length > 0) {\r\n    setShow(true);\r\n    console.log(selectedFlatRows[0].original);\r\n    setProductM({\r\n      title: selectedFlatRows[0].original.title,\r\n      price: selectedFlatRows[0].original.price,\r\n      codebar: selectedFlatRows[0].original.codebar,\r\n      category: selectedFlatRows[0].original.category\r\n    })\r\n  } else {\r\n    setShow(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table mt-5\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th className=\"find\" {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td className=\"find\" {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {/* \r\n        Pagination can be built however you'd like. \r\n        This is just a very basic UI implementation:\r\n      */}\r\n      <div className=\"pagination\">\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          onClick={() => gotoPage(0)}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {\"<<\"}\r\n        </button>{\" \"}\r\n        <button\r\n          className=\"btn btn-secondary ml-2\"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {\"<\"}\r\n        </button>{\" \"}\r\n        <button\r\n          className=\"btn btn-secondary  ml-2\"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          {\">\"}\r\n        </button>{\" \"}\r\n        <button\r\n          className=\"btn btn-secondary  ml-2 \"\r\n          onClick={() => gotoPage(pageCount - 1)}\r\n          disabled={!canNextPage}\r\n        >\r\n          {\">>\"}\r\n        </button>{\" \"}\r\n        <span className=\"ml-3\">\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span className=\"ml-3\">\r\n          | Go to page:{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n              gotoPage(page);\r\n            }}\r\n            style={{ width: \"100px\" }}\r\n          />\r\n        </span>{\" \"}\r\n        <select\r\n          className=\"ml-3\"\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}