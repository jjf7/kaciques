{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Owner/Desktop/kaciques/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/Owner/Desktop/kaciques/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\kaciques\\\\front\\\\components\\\\Table2.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport DataTable from \"react-data-table-component\";\n\nvar EditableCell = function EditableCell(_ref) {\n  _s();\n\n  var row = _ref.row,\n      index = _ref.index,\n      column = _ref.column,\n      col = _ref.col,\n      onChange = _ref.onChange;\n\n  var _useState = useState(row[column.selector]),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleOnChange = function handleOnChange(e) {\n    setValue(e.target.value);\n    onChange === null || onChange === void 0 ? void 0 : onChange(e);\n  };\n\n  if (column !== null && column !== void 0 && column.editing) {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: column.type || 'text',\n      name: column.selector,\n      style: {\n        width: '100%'\n      },\n      onChange: handleOnChange,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this);\n  }\n\n  if (col.cell) {\n    return col.cell(row, index, column);\n  }\n\n  return row[column.selector];\n};\n\n_s(EditableCell, \"aK3W7PCPaBiJrqV517c+BGZ7aXo=\");\n\n_c = EditableCell;\n\nvar Table2 = function Table2(_ref2) {\n  _s2();\n\n  var columns = _ref2.columns,\n      data = _ref2.data;\n\n  var _useState2 = useState(data),\n      innerData = _useState2[0],\n      setInnerData = _useState2[1];\n\n  console.log(innerData);\n\n  var _useState3 = useState(''),\n      editingId = _useState3[0],\n      setEditingId = _useState3[1];\n\n  var formData = useRef({}).current;\n\n  var isEditing = function isEditing(record) {\n    return record.id === editingId;\n  };\n\n  var formOnChange = function formOnChange(event) {\n    var nam = event.target.name;\n    var val = event.target.value;\n    formData = _objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, nam, val));\n  };\n\n  var edit = function edit(record) {\n    setEditingId(record.id);\n  };\n\n  var cancel = function cancel() {\n    setEditingId('');\n  };\n\n  var save = function save(item) {\n    var payload = _objectSpread(_objectSpread({}, item), formData);\n\n    var tempData = _toConsumableArray(innerData);\n\n    var index = tempData.findIndex(function (item) {\n      return editingId === item.id;\n    });\n\n    if (index > -1) {\n      var _item = tempData[index];\n      tempData.splice(index, 1, _objectSpread(_objectSpread({}, _item), payload));\n      setEditingId('');\n      setInnerData(tempData);\n    }\n  };\n\n  var mergedColumns = columns.map(function (col) {\n    if (!col.editable) {\n      return col;\n    }\n\n    return _objectSpread(_objectSpread({}, col), {}, {\n      cell: function cell(row, index, column) {\n        var editing = isEditing(row);\n        return /*#__PURE__*/_jsxDEV(EditableCell, {\n          row: row,\n          index: index,\n          column: _objectSpread(_objectSpread({}, column), {}, {\n            editing: editing\n          }),\n          col: col,\n          onChange: formOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this);\n      }\n    });\n  });\n  var createColumns = useCallback(function () {\n    return [].concat(_toConsumableArray(mergedColumns), [{\n      name: 'Actions',\n      allowOverflow: true,\n      minWidth: '200px',\n      cell: function cell(row) {\n        var editable = isEditing(row);\n\n        if (editable) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: function onClick() {\n                return save(row);\n              },\n              style: {\n                backgroundColor: 'lightgreen'\n              },\n              children: \"save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: cancel,\n              style: {\n                backgroundColor: 'orangered'\n              },\n              children: \"cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, _this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: function onClick() {\n            return edit(row);\n          },\n          style: {\n            backgroundColor: 'aliceblue'\n          },\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 18\n        }, _this);\n      }\n    }]);\n  }, [mergedColumns]);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    title: \"Movie List\",\n    columns: createColumns(),\n    data: innerData,\n    defaultSortField: \"title\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(Table2, \"pm9FwMFIEc7HW7M3E8OVRE+ptJM=\");\n\n_c2 = Table2;\nexport default Table2;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"Table2\");","map":{"version":3,"sources":["C:/Users/Owner/Desktop/kaciques/front/components/Table2.js"],"names":["React","useCallback","useRef","useState","DataTable","EditableCell","row","index","column","col","onChange","selector","value","setValue","handleOnChange","e","target","editing","type","width","cell","Table2","columns","data","innerData","setInnerData","console","log","editingId","setEditingId","formData","current","isEditing","record","id","formOnChange","event","nam","name","val","edit","cancel","save","item","payload","tempData","findIndex","splice","mergedColumns","map","editable","createColumns","allowOverflow","minWidth","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\r\nimport DataTable from \"react-data-table-component\";\r\n\r\n\r\nconst EditableCell = ({ row, index, column, col, onChange }) => {\r\n  const [value, setValue] = useState(row[column.selector]);\r\n\r\n  const handleOnChange = e => {\r\n    setValue(e.target.value);\r\n    onChange?.(e);\r\n  };\r\n\r\n  if (column?.editing) {\r\n    return (\r\n      <input\r\n        type={column.type || 'text'}\r\n        name={column.selector}\r\n        style={{ width: '100%' }}\r\n        onChange={handleOnChange}\r\n        value={value}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (col.cell) {\r\n    return col.cell(row, index, column);\r\n  }\r\n  return row[column.selector];\r\n};\r\n\r\nconst Table2 = ({columns, data}) => {\r\n  const [innerData, setInnerData] = useState(data);\r\n\r\n  console.log(innerData)\r\n  const [editingId, setEditingId] = useState('');\r\n  let formData = useRef({}).current;\r\n  const isEditing = record => record.id === editingId;\r\n\r\n  const formOnChange = event => {\r\n    const nam = event.target.name;\r\n    const val = event.target.value;\r\n\r\n    formData = {\r\n      ...formData,\r\n      [nam]: val,\r\n    };\r\n  };\r\n\r\n  const edit = record => {\r\n    setEditingId(record.id);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingId('');\r\n  };\r\n\r\n  const save = item => {\r\n    const payload = { ...item, ...formData };\r\n    const tempData = [...innerData];\r\n\r\n    \r\n    const index = tempData.findIndex(item => editingId === item.id);\r\n    if (index > -1) {\r\n      \r\n      const item = tempData[index];\r\n      tempData.splice(index, 1, {\r\n        ...item,\r\n        ...payload,\r\n      });\r\n      setEditingId('');\r\n      setInnerData(tempData);\r\n    }\r\n  };\r\n\r\n  const mergedColumns = columns.map(col => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      cell: (row, index, column) => {\r\n        const editing = isEditing(row);\r\n        return (\r\n          <EditableCell\r\n            row={row}\r\n            index={index}\r\n            column={{ ...column, editing }}\r\n            col={col}\r\n            onChange={formOnChange}\r\n          />\r\n        );\r\n      },\r\n    };\r\n  });\r\n\r\n  const createColumns = useCallback(() => {\r\n    return [\r\n      ...mergedColumns,\r\n      {\r\n        name: 'Actions',\r\n        allowOverflow: true,\r\n        minWidth: '200px',\r\n        cell: row => {\r\n          const editable = isEditing(row);\r\n          if (editable) {\r\n            return (\r\n              <div>\r\n                <button type=\"button\" onClick={() => save(row)} style={{ backgroundColor: 'lightgreen' }}>save</button>\r\n                <button type=\"button\" onClick={cancel} style={{ backgroundColor: 'orangered' }}>cancel</button>\r\n              </div>\r\n            );\r\n          }\r\n          return <button type=\"button\" onClick={() => edit(row)} style={{ backgroundColor: 'aliceblue' }}>edit</button>;\r\n        },\r\n      },\r\n    ];\r\n  }, [mergedColumns]);\r\n\r\n  return (\r\n    <DataTable\r\n      title=\"Movie List\"\r\n      columns={createColumns()}\r\n      data={innerData}\r\n      defaultSortField=\"title\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Table2"]},"metadata":{},"sourceType":"module"}