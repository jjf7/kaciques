{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/Owner/Desktop/kaciques/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\kaciques\\\\front\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nexport default function Table(_ref) {\n  _s();\n\n  var _this = this;\n\n  var columns = _ref.columns,\n      data = _ref.data;\n\n  // Use the state and functions returned from useTable to build your UI\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    initialState: {\n      pageIndex: 2\n    }\n  }, usePagination),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: JSON.stringify({\n          pageIndex: pageIndex,\n          pageSize: pageSize,\n          pageCount: pageCount,\n          canNextPage: canNextPage,\n          canPreviousPage: canPreviousPage\n        }, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                children: column.render(\"Header\")\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map(function (row, i) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.render(\"Cell\")\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return gotoPage(0);\n        },\n        disabled: !canPreviousPage,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return previousPage();\n        },\n        disabled: !canPreviousPage,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return nextPage();\n        },\n        disabled: !canNextPage,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return gotoPage(pageCount - 1);\n        },\n        disabled: !canNextPage,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: function onChange(e) {\n            var page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: function onChange(e) {\n          setPageSize(Number(e.target.value));\n        },\n        children: [10, 20, 30, 40, 50].map(function (pageSize) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Table, \"JDI+7VFvVRrIJkCn908U3ObIOC0=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Owner/Desktop/kaciques/front/components/Table.js"],"names":["React","useTable","usePagination","Table","columns","data","initialState","pageIndex","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","JSON","stringify","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useTable, usePagination } from \"react-table\";\r\n\r\nexport default function Table({ columns, data }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2 },\r\n    },\r\n    usePagination\r\n  );\r\n  return (\r\n    <>\r\n      <pre>\r\n        <code>\r\n          {JSON.stringify(\r\n            {\r\n              pageIndex,\r\n              pageSize,\r\n              pageCount,\r\n              canNextPage,\r\n              canPreviousPage,\r\n            },\r\n            null,\r\n            2\r\n          )}\r\n        </code>\r\n      </pre>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {/* \r\n        Pagination can be built however you'd like. \r\n        This is just a very basic UI implementation:\r\n      */}\r\n      <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </button>{\" \"}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {\"<\"}\r\n        </button>{\" \"}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {\">\"}\r\n        </button>{\" \"}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </button>{\" \"}\r\n        <span>\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        <span>\r\n          | Go to page:{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n              gotoPage(page);\r\n            }}\r\n            style={{ width: \"100px\" }}\r\n          />\r\n        </span>{\" \"}\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}