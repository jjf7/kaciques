{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport DataTable from \"react-data-table-component\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { useRouter } from \"next/router\";\nimport { checkLocal } from \"../utils/local\";\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst ClearButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n        columns={columns}\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({\n  filterText,\n  onFilter,\n  onClear\n}) => /*#__PURE__*/_jsxs(_Fragment, {\n  children: [/*#__PURE__*/_jsx(TextField, {\n    id: \"search\",\n    type: \"text\",\n    placeholder: \"Introduzca el nombre del producto a buscar\",\n    \"aria-label\": \"Search Input\",\n    value: filterText,\n    onChange: onFilter\n  }), /*#__PURE__*/_jsx(ClearButton, {\n    type: \"button\",\n    onClick: onClear,\n    children: \"X\"\n  })]\n});\n\nconst TableCategories = ({\n  columns,\n  data,\n  setMsg\n}) => {\n  const router = useRouter();\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const [filterText, setFilterText] = React.useState(\"\");\n  const {\n    0: validated,\n    1: setValidated\n  } = useState(false);\n  const categoryObject = {\n    id: \"\",\n    title: \"\"\n  };\n  const {\n    0: category,\n    1: setCategory\n  } = useState(categoryObject);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n  const filteredItems = data.filter(item => item.title && item.title.toLowerCase().includes(filterText.toLowerCase()));\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText(\"\");\n      }\n    };\n\n    return /*#__PURE__*/_jsx(FilterComponent, {\n      onFilter: e => setFilterText(e.target.value),\n      onClear: handleClear,\n      filterText: filterText\n    });\n  }, [filterText, resetPaginationToggle]);\n\n  const edit = record => {\n    setCategory(_objectSpread(_objectSpread({}, category), {}, {\n      id: record._id,\n      title: record.title\n    }));\n    handleShow();\n  };\n\n  const handleSubmit = async e => {\n    const u = JSON.parse(checkLocal(router));\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      setValidated(true);\n      const result = await fetch(`http://localhost:3001/categories/${category.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": u.token\n        },\n        body: JSON.stringify({\n          title: category.title\n        })\n      });\n      const response = await result.json();\n\n      if (response == \"success\") {\n        setMsg({\n          status: 1,\n          msg: \"Se ha editado correctamente la categoria\"\n        });\n        setShow(false);\n        setCategory(categoryObject);\n      } else {\n        setMsg({\n          status: 2,\n          msg: response\n        });\n      }\n    }\n  };\n\n  const del = async record => {\n    const u = JSON.parse(checkLocal(router));\n\n    if (confirm(\"Estas seguro de eliminar la categor&iacute;a?\")) {\n      const result = await fetch(`http://localhost:3001/categories/${record.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": u.token\n        }\n      });\n      console.log(result);\n      const response = await result.json();\n      console.log(\"response:\", response);\n\n      if (response == \"success\") {\n        setMsg({\n          status: 1,\n          msg: \"Se ha eliminado correctamente la categoria\"\n        });\n      } else {\n        setMsg({\n          status: 1,\n          msg: \"Ha ocurrido un error\"\n        });\n      }\n    } else {}\n  };\n\n  const mergedColumns = columns.map(col => {\n    return col;\n  });\n  const createColumns = useCallback(() => {\n    return [...mergedColumns, {\n      name: \"Acciones\",\n      allowOverflow: true,\n      right: true,\n      minWidth: \"200px\",\n      cell: row => {\n        return /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(\"button\", {\n            className: \"btn btn-warning btn-sm\",\n            type: \"button\",\n            onClick: () => edit(row),\n            style: {\n              backgroundColor: \"aliceblue\"\n            },\n            children: /*#__PURE__*/_jsx(\"i\", {\n              className: \"fi-rr-edit\"\n            })\n          })\n        });\n      }\n    }];\n  }, [mergedColumns]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(DataTable, {\n      columns: createColumns(),\n      data: filteredItems,\n      defaultSortField: \"title\",\n      pagination: true,\n      paginationPerPage: 5,\n      paginationResetDefaultPage: resetPaginationToggle // optionally, a hook to reset pagination to page 1\n      ,\n      subHeader: true,\n      subHeaderComponent: subHeaderComponentMemo,\n      persistTableHead: true\n    }), /*#__PURE__*/_jsxs(Modal, {\n      size: \"lg\",\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsx(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsx(Modal.Title, {\n          children: \"Editar categor\\xEDa\"\n        })\n      }), /*#__PURE__*/_jsx(Modal.Body, {\n        children: /*#__PURE__*/_jsx(Form, {\n          validated: validated,\n          children: /*#__PURE__*/_jsxs(Form.Group, {\n            as: Row,\n            style: {\n              marginTop: \"30px\"\n            },\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              column: true,\n              sm: 3,\n              children: \"Nombre Categor\\xEDa\"\n            }), /*#__PURE__*/_jsxs(Col, {\n              sm: 9,\n              children: [/*#__PURE__*/_jsx(FormControl, {\n                onChange: e => {\n                  setCategory(_objectSpread(_objectSpread({}, category), {}, {\n                    title: e.target.value\n                  }));\n                },\n                name: \"title\",\n                id: \"title\",\n                required: true,\n                value: category.title,\n                type: \"text\",\n                placeholder: \"Nombre\"\n              }), /*#__PURE__*/_jsx(Form.Control.Feedback, {\n                children: \"Correcto!\"\n              }), /*#__PURE__*/_jsx(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Introduzca el nombre de la categor&iacuta;a\"\n              })]\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsxs(Modal.Footer, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cerrar\"\n        }), /*#__PURE__*/_jsx(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Editar categor\\xEDa\"\n        })]\n      })]\n    })]\n  });\n};\n\nexport default TableCategories;","map":null,"metadata":{},"sourceType":"module"}